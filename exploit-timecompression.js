/** @param {NS} ns **/
export async function main(ns) {
	ns.disableLog('disableLog');
	ns.disableLog('sleep');

	// TODO: This doesn't seem to be working. Not sure why.
	// Backup the function prototype so that we can undo afterwards.
	let now = (new Date()).getTime();
	let getTime = Date.prototype.getTime;
	let interval = 200;
	let duration = 100 * 1000;
	let iterations = duration / interval;
	for (let i = 0; i < iterations; i++) {
		Date.prototype.getTime = function () { return now + i; };
		ns.print(i + ': ' + (new Date()).getTime());
		await ns.sleep(interval);
	}
	Date.prototype.getTime = getTime;
}